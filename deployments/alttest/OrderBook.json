{
  "address": "0x5F48872D2F81d555c287F1dc2379B6E5fe1346C8",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "OrderCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "OrderExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "OrderPlaced",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "cancelOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orders",
      "outputs": [
        {
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenBid",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "bidAmt",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenAsk",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "askAmt",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "internalType": "enum OrderBook.Status",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ordersLen",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenBid",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "bidAmt",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenAsk",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "askAmt",
          "type": "uint256"
        }
      ],
      "name": "placeOrder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "takeOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x7a3e2ebec4c34ab5dcae81385446d418961fbda23606f24690b0b2108bca6466",
  "receipt": {
    "to": null,
    "from": "0xf24FF3a9CF04c71Dbc94D0b566f7A27B94566cac",
    "contractAddress": "0x5F48872D2F81d555c287F1dc2379B6E5fe1346C8",
    "transactionIndex": 0,
    "gasUsed": "1126897",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xf82ba5e6eec67acff6c34b58bb74d285d12107e4e5144642a3b9868119e98af1",
    "transactionHash": "0x7a3e2ebec4c34ab5dcae81385446d418961fbda23606f24690b0b2108bca6466",
    "logs": [],
    "blockNumber": 1602228,
    "cumulativeGasUsed": "1126897",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "a703e25a9b1f67676aa25075ba9a8149",
  "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"OrderCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"OrderExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"OrderPlaced\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"cancelOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenBid\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bidAmt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAsk\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"askAmt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"enum OrderBook.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ordersLen\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenBid\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bidAmt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAsk\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"askAmt\",\"type\":\"uint256\"}],\"name\":\"placeOrder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"takeOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OrderBook.sol\":\"OrderBook\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"contracts/OrderBook.sol\":{\"content\":\"// Solidity files have to start with this pragma.\\n// It will be used by the Solidity compiler to validate its version.\\n\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.12;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract OrderBook {\\n  enum Status {\\n    Active,\\n    Completed,\\n    Cancelled\\n  }\\n\\n  struct Order {\\n    address maker;\\n    address tokenBid;\\n    uint256 bidAmt;\\n    address tokenAsk;\\n    uint256 askAmt;\\n\\n    address taker;\\n    Status  status;\\n    uint256 timestamp;\\n  }\\n\\n  Order[] public orders;\\n\\n  event OrderPlaced(address indexed, uint256, address, uint256, address, uint256);\\n  event OrderCancelled(uint256);\\n  event OrderExecuted(address indexed, uint256);\\n\\n  function placeOrder(address tokenBid, uint256 bidAmt, address tokenAsk, uint256 askAmt) public returns (uint256) {\\n    // TODO: check the tokenBid and tokenAsk fulfill the\\n\\n    require(IERC20(tokenBid).balanceOf(msg.sender) >= bidAmt, \\\"Insufficient bid token\\\");\\n\\n    // Place the order\\n    // solhint-disable-next-line not-rely-on-time\\n    Order memory newOrder = Order(msg.sender, tokenBid, bidAmt, tokenAsk, askAmt, address(0), Status.Active, block.timestamp);\\n    orders.push(newOrder);\\n    uint256 index = orders.length - 1;\\n\\n    // Approve this contract to spend your token\\n    IERC20(tokenBid).approve(address(this), bidAmt);\\n    emit OrderPlaced(msg.sender, index, tokenBid, bidAmt, tokenAsk, askAmt);\\n\\n    return index;\\n  }\\n\\n  function cancelOrder(uint256 index) public {\\n    // check\\n    require(index < orders.length, \\\"Invalid index\\\");\\n    Order storage order = orders[index];\\n    require(order.status == Status.Active, \\\"Not an active order\\\");\\n    require(order.maker == msg.sender, \\\"Not order owner\\\");\\n\\n    order.status = Status.Cancelled;\\n    // solhint-disable-next-line not-rely-on-time\\n    order.timestamp = block.timestamp;\\n    emit OrderCancelled(index);\\n  }\\n\\n  function takeOrder(uint256 index) public {\\n    // check\\n    require(index < orders.length, \\\"Invalid index\\\");\\n    Order storage order = orders[index];\\n    require(order.status == Status.Active, \\\"Not an active order\\\");\\n    require(IERC20(order.tokenAsk).balanceOf(msg.sender) >= order.askAmt, \\\"Insufficient ask token\\\");\\n\\n    IERC20(order.tokenAsk).approve(address(this), order.askAmt);\\n\\n    // The actual token transfer\\n    IERC20(order.tokenBid).transferFrom(order.maker, msg.sender, order.bidAmt);\\n    IERC20(order.tokenAsk).transferFrom(msg.sender, order.maker, order.askAmt);\\n\\n    order.status = Status.Completed;\\n    order.taker = msg.sender;\\n    // solhint-disable-next-line not-rely-on-time\\n    order.timestamp = block.timestamp;\\n    emit OrderExecuted(msg.sender, index);\\n  }\\n\\n  function ordersLen() public view returns (uint256) {\\n    return orders.length;\\n  }\\n}\\n\",\"keccak256\":\"0x696c6e18afdb11ca8fe23d9a40ab6e1785dfdc2a0f6b57d9853c688e4efa87b8\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611382806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631d5c1c981461005c5780633b5d1a241461007a578063514fcac714610096578063a85c38ef146100b2578063afe18413146100e9575b600080fd5b610064610119565b6040516100719190610cd6565b60405180910390f35b610094600480360381019061008f9190610d22565b610125565b005b6100b060048036038101906100ab9190610d22565b6105f9565b005b6100cc60048036038101906100c79190610d22565b6107e0565b6040516100e0989796959493929190610e07565b60405180910390f35b61010360048036038101906100fe9190610eb1565b6108c5565b6040516101109190610cd6565b60405180910390f35b60008080549050905090565b600080549050811061016c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016390610f75565b60405180910390fd5b600080828154811061018157610180610f95565b5b90600052602060002090600702019050600060028111156101a5576101a4610d90565b5b8160050160149054906101000a900460ff1660028111156101c9576101c8610d90565b5b14610209576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020090611010565b60405180910390fd5b80600401548160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161026b9190611030565b602060405180830381865afa158015610288573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ac9190611060565b10156102ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e4906110d9565b60405180910390fd5b8060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b33083600401546040518363ffffffff1660e01b81526004016103509291906110f9565b6020604051808303816000875af115801561036f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610393919061115a565b508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163384600201546040518463ffffffff1660e01b815260040161041d93929190611187565b6020604051808303816000875af115801561043c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610460919061115a565b508060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd338360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600401546040518463ffffffff1660e01b81526004016104ea93929190611187565b6020604051808303816000875af1158015610509573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052d919061115a565b5060018160050160146101000a81548160ff0219169083600281111561055657610555610d90565b5b0217905550338160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055504281600601819055503373ffffffffffffffffffffffffffffffffffffffff167f67952de212ba12d8a24b4d320b2adc6648cd78dfd1cb43bf37a5f0fdd461d8ef836040516105ed9190610cd6565b60405180910390a25050565b6000805490508110610640576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063790610f75565b60405180910390fd5b600080828154811061065557610654610f95565b5b906000526020600020906007020190506000600281111561067957610678610d90565b5b8160050160149054906101000a900460ff16600281111561069d5761069c610d90565b5b146106dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d490611010565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461076f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107669061120a565b60405180910390fd5b60028160050160146101000a81548160ff0219169083600281111561079757610796610d90565b5b02179055504281600601819055507f61b9399f2f0f32ca39ce8d7be32caed5ec22fe07a6daba3a467ed479ec606582826040516107d49190610cd6565b60405180910390a15050565b600081815481106107f057600080fd5b90600052602060002090600702016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050160149054906101000a900460ff16908060060154905088565b6000838573ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016109019190611030565b602060405180830381865afa15801561091e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109429190611060565b1015610983576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097a90611276565b60405180910390fd5b60006040518061010001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018573ffffffffffffffffffffffffffffffffffffffff168152602001848152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160006002811115610a2257610a21610d90565b5b8152602001428152509050600081908060018154018082558091505060019003906000526020600020906007020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160050160146101000a81548160ff02191690836002811115610bb457610bb3610d90565b5b021790555060e08201518160060155505060006001600080549050610bd991906112c5565b90508673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330886040518363ffffffff1660e01b8152600401610c169291906110f9565b6020604051808303816000875af1158015610c35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c59919061115a565b503373ffffffffffffffffffffffffffffffffffffffff167f2779fe812f2a74097a118c221e18caafb74b1ead73b6821d50af64d6da968f7f8289898989604051610ca89594939291906112f9565b60405180910390a28092505050949350505050565b6000819050919050565b610cd081610cbd565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600080fd5b610cff81610cbd565b8114610d0a57600080fd5b50565b600081359050610d1c81610cf6565b92915050565b600060208284031215610d3857610d37610cf1565b5b6000610d4684828501610d0d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d7a82610d4f565b9050919050565b610d8a81610d6f565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110610dd057610dcf610d90565b5b50565b6000819050610de182610dbf565b919050565b6000610df182610dd3565b9050919050565b610e0181610de6565b82525050565b600061010082019050610e1d600083018b610d81565b610e2a602083018a610d81565b610e376040830189610cc7565b610e446060830188610d81565b610e516080830187610cc7565b610e5e60a0830186610d81565b610e6b60c0830185610df8565b610e7860e0830184610cc7565b9998505050505050505050565b610e8e81610d6f565b8114610e9957600080fd5b50565b600081359050610eab81610e85565b92915050565b60008060008060808587031215610ecb57610eca610cf1565b5b6000610ed987828801610e9c565b9450506020610eea87828801610d0d565b9350506040610efb87828801610e9c565b9250506060610f0c87828801610d0d565b91505092959194509250565b600082825260208201905092915050565b7f496e76616c696420696e64657800000000000000000000000000000000000000600082015250565b6000610f5f600d83610f18565b9150610f6a82610f29565b602082019050919050565b60006020820190508181036000830152610f8e81610f52565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e6f7420616e20616374697665206f7264657200000000000000000000000000600082015250565b6000610ffa601383610f18565b915061100582610fc4565b602082019050919050565b6000602082019050818103600083015261102981610fed565b9050919050565b60006020820190506110456000830184610d81565b92915050565b60008151905061105a81610cf6565b92915050565b60006020828403121561107657611075610cf1565b5b60006110848482850161104b565b91505092915050565b7f496e73756666696369656e742061736b20746f6b656e00000000000000000000600082015250565b60006110c3601683610f18565b91506110ce8261108d565b602082019050919050565b600060208201905081810360008301526110f2816110b6565b9050919050565b600060408201905061110e6000830185610d81565b61111b6020830184610cc7565b9392505050565b60008115159050919050565b61113781611122565b811461114257600080fd5b50565b6000815190506111548161112e565b92915050565b6000602082840312156111705761116f610cf1565b5b600061117e84828501611145565b91505092915050565b600060608201905061119c6000830186610d81565b6111a96020830185610d81565b6111b66040830184610cc7565b949350505050565b7f4e6f74206f72646572206f776e65720000000000000000000000000000000000600082015250565b60006111f4600f83610f18565b91506111ff826111be565b602082019050919050565b60006020820190508181036000830152611223816111e7565b9050919050565b7f496e73756666696369656e742062696420746f6b656e00000000000000000000600082015250565b6000611260601683610f18565b915061126b8261122a565b602082019050919050565b6000602082019050818103600083015261128f81611253565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112d082610cbd565b91506112db83610cbd565b9250828210156112ee576112ed611296565b5b828203905092915050565b600060a08201905061130e6000830188610cc7565b61131b6020830187610d81565b6113286040830186610cc7565b6113356060830185610d81565b6113426080830184610cc7565b969550505050505056fea26469706673582212208b772f6cda9581f4fff75da2100bc52729d0acb9e081f6de157f49791a46737264736f6c634300080c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c80631d5c1c981461005c5780633b5d1a241461007a578063514fcac714610096578063a85c38ef146100b2578063afe18413146100e9575b600080fd5b610064610119565b6040516100719190610cd6565b60405180910390f35b610094600480360381019061008f9190610d22565b610125565b005b6100b060048036038101906100ab9190610d22565b6105f9565b005b6100cc60048036038101906100c79190610d22565b6107e0565b6040516100e0989796959493929190610e07565b60405180910390f35b61010360048036038101906100fe9190610eb1565b6108c5565b6040516101109190610cd6565b60405180910390f35b60008080549050905090565b600080549050811061016c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016390610f75565b60405180910390fd5b600080828154811061018157610180610f95565b5b90600052602060002090600702019050600060028111156101a5576101a4610d90565b5b8160050160149054906101000a900460ff1660028111156101c9576101c8610d90565b5b14610209576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020090611010565b60405180910390fd5b80600401548160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161026b9190611030565b602060405180830381865afa158015610288573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ac9190611060565b10156102ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e4906110d9565b60405180910390fd5b8060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b33083600401546040518363ffffffff1660e01b81526004016103509291906110f9565b6020604051808303816000875af115801561036f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610393919061115a565b508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163384600201546040518463ffffffff1660e01b815260040161041d93929190611187565b6020604051808303816000875af115801561043c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610460919061115a565b508060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd338360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600401546040518463ffffffff1660e01b81526004016104ea93929190611187565b6020604051808303816000875af1158015610509573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052d919061115a565b5060018160050160146101000a81548160ff0219169083600281111561055657610555610d90565b5b0217905550338160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055504281600601819055503373ffffffffffffffffffffffffffffffffffffffff167f67952de212ba12d8a24b4d320b2adc6648cd78dfd1cb43bf37a5f0fdd461d8ef836040516105ed9190610cd6565b60405180910390a25050565b6000805490508110610640576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063790610f75565b60405180910390fd5b600080828154811061065557610654610f95565b5b906000526020600020906007020190506000600281111561067957610678610d90565b5b8160050160149054906101000a900460ff16600281111561069d5761069c610d90565b5b146106dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d490611010565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461076f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107669061120a565b60405180910390fd5b60028160050160146101000a81548160ff0219169083600281111561079757610796610d90565b5b02179055504281600601819055507f61b9399f2f0f32ca39ce8d7be32caed5ec22fe07a6daba3a467ed479ec606582826040516107d49190610cd6565b60405180910390a15050565b600081815481106107f057600080fd5b90600052602060002090600702016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050160149054906101000a900460ff16908060060154905088565b6000838573ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016109019190611030565b602060405180830381865afa15801561091e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109429190611060565b1015610983576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097a90611276565b60405180910390fd5b60006040518061010001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018573ffffffffffffffffffffffffffffffffffffffff168152602001848152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160006002811115610a2257610a21610d90565b5b8152602001428152509050600081908060018154018082558091505060019003906000526020600020906007020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160050160146101000a81548160ff02191690836002811115610bb457610bb3610d90565b5b021790555060e08201518160060155505060006001600080549050610bd991906112c5565b90508673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330886040518363ffffffff1660e01b8152600401610c169291906110f9565b6020604051808303816000875af1158015610c35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c59919061115a565b503373ffffffffffffffffffffffffffffffffffffffff167f2779fe812f2a74097a118c221e18caafb74b1ead73b6821d50af64d6da968f7f8289898989604051610ca89594939291906112f9565b60405180910390a28092505050949350505050565b6000819050919050565b610cd081610cbd565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600080fd5b610cff81610cbd565b8114610d0a57600080fd5b50565b600081359050610d1c81610cf6565b92915050565b600060208284031215610d3857610d37610cf1565b5b6000610d4684828501610d0d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d7a82610d4f565b9050919050565b610d8a81610d6f565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110610dd057610dcf610d90565b5b50565b6000819050610de182610dbf565b919050565b6000610df182610dd3565b9050919050565b610e0181610de6565b82525050565b600061010082019050610e1d600083018b610d81565b610e2a602083018a610d81565b610e376040830189610cc7565b610e446060830188610d81565b610e516080830187610cc7565b610e5e60a0830186610d81565b610e6b60c0830185610df8565b610e7860e0830184610cc7565b9998505050505050505050565b610e8e81610d6f565b8114610e9957600080fd5b50565b600081359050610eab81610e85565b92915050565b60008060008060808587031215610ecb57610eca610cf1565b5b6000610ed987828801610e9c565b9450506020610eea87828801610d0d565b9350506040610efb87828801610e9c565b9250506060610f0c87828801610d0d565b91505092959194509250565b600082825260208201905092915050565b7f496e76616c696420696e64657800000000000000000000000000000000000000600082015250565b6000610f5f600d83610f18565b9150610f6a82610f29565b602082019050919050565b60006020820190508181036000830152610f8e81610f52565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e6f7420616e20616374697665206f7264657200000000000000000000000000600082015250565b6000610ffa601383610f18565b915061100582610fc4565b602082019050919050565b6000602082019050818103600083015261102981610fed565b9050919050565b60006020820190506110456000830184610d81565b92915050565b60008151905061105a81610cf6565b92915050565b60006020828403121561107657611075610cf1565b5b60006110848482850161104b565b91505092915050565b7f496e73756666696369656e742061736b20746f6b656e00000000000000000000600082015250565b60006110c3601683610f18565b91506110ce8261108d565b602082019050919050565b600060208201905081810360008301526110f2816110b6565b9050919050565b600060408201905061110e6000830185610d81565b61111b6020830184610cc7565b9392505050565b60008115159050919050565b61113781611122565b811461114257600080fd5b50565b6000815190506111548161112e565b92915050565b6000602082840312156111705761116f610cf1565b5b600061117e84828501611145565b91505092915050565b600060608201905061119c6000830186610d81565b6111a96020830185610d81565b6111b66040830184610cc7565b949350505050565b7f4e6f74206f72646572206f776e65720000000000000000000000000000000000600082015250565b60006111f4600f83610f18565b91506111ff826111be565b602082019050919050565b60006020820190508181036000830152611223816111e7565b9050919050565b7f496e73756666696369656e742062696420746f6b656e00000000000000000000600082015250565b6000611260601683610f18565b915061126b8261122a565b602082019050919050565b6000602082019050818103600083015261128f81611253565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112d082610cbd565b91506112db83610cbd565b9250828210156112ee576112ed611296565b5b828203905092915050565b600060a08201905061130e6000830188610cc7565b61131b6020830187610d81565b6113286040830186610cc7565b6113356060830185610d81565b6113426080830184610cc7565b969550505050505056fea26469706673582212208b772f6cda9581f4fff75da2100bc52729d0acb9e081f6de157f49791a46737264736f6c634300080c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 106,
        "contract": "contracts/OrderBook.sol:OrderBook",
        "label": "orders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_struct(Order)102_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Order)102_storage)dyn_storage": {
        "base": "t_struct(Order)102_storage",
        "encoding": "dynamic_array",
        "label": "struct OrderBook.Order[]",
        "numberOfBytes": "32"
      },
      "t_enum(Status)84": {
        "encoding": "inplace",
        "label": "enum OrderBook.Status",
        "numberOfBytes": "1"
      },
      "t_struct(Order)102_storage": {
        "encoding": "inplace",
        "label": "struct OrderBook.Order",
        "members": [
          {
            "astId": 86,
            "contract": "contracts/OrderBook.sol:OrderBook",
            "label": "maker",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 88,
            "contract": "contracts/OrderBook.sol:OrderBook",
            "label": "tokenBid",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 90,
            "contract": "contracts/OrderBook.sol:OrderBook",
            "label": "bidAmt",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 92,
            "contract": "contracts/OrderBook.sol:OrderBook",
            "label": "tokenAsk",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 94,
            "contract": "contracts/OrderBook.sol:OrderBook",
            "label": "askAmt",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 96,
            "contract": "contracts/OrderBook.sol:OrderBook",
            "label": "taker",
            "offset": 0,
            "slot": "5",
            "type": "t_address"
          },
          {
            "astId": 99,
            "contract": "contracts/OrderBook.sol:OrderBook",
            "label": "status",
            "offset": 20,
            "slot": "5",
            "type": "t_enum(Status)84"
          },
          {
            "astId": 101,
            "contract": "contracts/OrderBook.sol:OrderBook",
            "label": "timestamp",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}