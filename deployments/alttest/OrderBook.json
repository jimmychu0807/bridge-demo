{
  "address": "0x0350A41cc34058C541bA252985D83892D79f111d",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "OrderCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "OrderExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "OrderPlaced",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "cancelOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orders",
      "outputs": [
        {
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenBid",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "bidAmt",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenAsk",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "askAmt",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "internalType": "enum OrderBook.Status",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenBid",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "bidAmt",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenAsk",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "askAmt",
          "type": "uint256"
        }
      ],
      "name": "placeOrder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "takeOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x46edf154c1e7fde9d7ffb41889c62b03a909a17e2aaeb0bf1121f1cf2ba634d2",
  "receipt": {
    "to": null,
    "from": "0xf24FF3a9CF04c71Dbc94D0b566f7A27B94566cac",
    "contractAddress": "0x0350A41cc34058C541bA252985D83892D79f111d",
    "transactionIndex": 0,
    "gasUsed": "1115435",
    "logsBloom": "0x
    "blockHash": "0xbf06f87695aacdf7598d2c714474a9c373d162d1110807ad0a5c194d71ad0ead",
    "transactionHash": "0x46edf154c1e7fde9d7ffb41889c62b03a909a17e2aaeb0bf1121f1cf2ba634d2",
    "logs": [],
    "blockNumber": 1578918,
    "cumulativeGasUsed": "1115435",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "da9ca6f27e76bccfc5365e61a7974564",
  "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"OrderCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"OrderExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"OrderPlaced\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"cancelOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenBid\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bidAmt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAsk\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"askAmt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"enum OrderBook.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenBid\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bidAmt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAsk\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"askAmt\",\"type\":\"uint256\"}],\"name\":\"placeOrder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"takeOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OrderBook.sol\":\"OrderBook\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"contracts/OrderBook.sol\":{\"content\":\"// Solidity files have to start with this pragma.\\n// It will be used by the Solidity compiler to validate its version.\\n\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.12;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract OrderBook {\\n  enum Status {\\n    Active,\\n    Completed,\\n    Cancelled\\n  }\\n\\n  struct Order {\\n    address maker;\\n    address tokenBid;\\n    uint256 bidAmt;\\n    address tokenAsk;\\n    uint256 askAmt;\\n\\n    address taker;\\n    Status  status;\\n    uint256 timestamp;\\n  }\\n\\n  Order[] public orders;\\n\\n  event OrderPlaced(address indexed, uint256, address, uint256, address, uint256);\\n  event OrderCancelled(uint256);\\n  event OrderExecuted(address indexed, uint256);\\n\\n  function placeOrder(address tokenBid, uint256 bidAmt, address tokenAsk, uint256 askAmt) public returns (uint256) {\\n    // TODO: check the tokenBid and tokenAsk fulfill the\\n\\n    require(IERC20(tokenBid).balanceOf(msg.sender) >= bidAmt, \\\"Insufficient bid token\\\");\\n\\n    // Place the order\\n    // solhint-disable-next-line not-rely-on-time\\n    Order memory newOrder = Order(msg.sender, tokenBid, bidAmt, tokenAsk, askAmt, address(0), Status.Active, block.timestamp);\\n    orders.push(newOrder);\\n    uint256 index = orders.length - 1;\\n\\n    // Approve this contract to spend your token\\n    IERC20(tokenBid).approve(address(this), bidAmt);\\n    emit OrderPlaced(msg.sender, index, tokenBid, bidAmt, tokenAsk, askAmt);\\n\\n    return index;\\n  }\\n\\n  function cancelOrder(uint256 index) public {\\n    // check\\n    require(index < orders.length, \\\"Invalid index\\\");\\n    Order storage order = orders[index];\\n    require(order.status == Status.Active, \\\"Not an active order\\\");\\n    require(order.maker == msg.sender, \\\"Not order owner\\\");\\n\\n    order.status = Status.Cancelled;\\n    // solhint-disable-next-line not-rely-on-time\\n    order.timestamp = block.timestamp;\\n    emit OrderCancelled(index);\\n  }\\n\\n  function takeOrder(uint256 index) public {\\n    // check\\n    require(index < orders.length, \\\"Invalid index\\\");\\n    Order storage order = orders[index];\\n    require(order.status == Status.Active, \\\"Not an active order\\\");\\n    require(IERC20(order.tokenAsk).balanceOf(msg.sender) >= order.askAmt, \\\"Insufficient ask token\\\");\\n\\n    IERC20(order.tokenAsk).approve(address(this), order.askAmt);\\n\\n    // The actual token transfer\\n    IERC20(order.tokenBid).transferFrom(order.maker, msg.sender, order.bidAmt);\\n    IERC20(order.tokenAsk).transferFrom(msg.sender, order.maker, order.askAmt);\\n\\n    order.status = Status.Completed;\\n    order.taker = msg.sender;\\n    // solhint-disable-next-line not-rely-on-time\\n    order.timestamp = block.timestamp;\\n    emit OrderExecuted(msg.sender, index);\\n  }\\n}\\n\",\"keccak256\":\"0x36108aafaddf308c4be0c890ac46c8cfe72bdd4f012b531c8008e30bcb2243d1\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061134d806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80633b5d1a2414610051578063514fcac71461006d578063a85c38ef14610089578063afe18413146100c0575b600080fd5b61006b60048036038101906100669190610cc3565b6100f0565b005b61008760048036038101906100829190610cc3565b6105c4565b005b6100a3600480360381019061009e9190610cc3565b6107ab565b6040516100b7989796959493929190610db7565b60405180910390f35b6100da60048036038101906100d59190610e61565b610890565b6040516100e79190610ec8565b60405180910390f35b6000805490508110610137576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012e90610f40565b60405180910390fd5b600080828154811061014c5761014b610f60565b5b90600052602060002090600702019050600060028111156101705761016f610d40565b5b8160050160149054906101000a900460ff16600281111561019457610193610d40565b5b146101d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101cb90610fdb565b60405180910390fd5b80600401548160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016102369190610ffb565b602060405180830381865afa158015610253573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610277919061102b565b10156102b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102af906110a4565b60405180910390fd5b8060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b33083600401546040518363ffffffff1660e01b815260040161031b9291906110c4565b6020604051808303816000875af115801561033a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035e9190611125565b508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163384600201546040518463ffffffff1660e01b81526004016103e893929190611152565b6020604051808303816000875af1158015610407573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042b9190611125565b508060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd338360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600401546040518463ffffffff1660e01b81526004016104b593929190611152565b6020604051808303816000875af11580156104d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f89190611125565b5060018160050160146101000a81548160ff0219169083600281111561052157610520610d40565b5b0217905550338160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055504281600601819055503373ffffffffffffffffffffffffffffffffffffffff167f67952de212ba12d8a24b4d320b2adc6648cd78dfd1cb43bf37a5f0fdd461d8ef836040516105b89190610ec8565b60405180910390a25050565b600080549050811061060b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060290610f40565b60405180910390fd5b60008082815481106106205761061f610f60565b5b906000526020600020906007020190506000600281111561064457610643610d40565b5b8160050160149054906101000a900460ff16600281111561066857610667610d40565b5b146106a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069f90610fdb565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461073a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610731906111d5565b60405180910390fd5b60028160050160146101000a81548160ff0219169083600281111561076257610761610d40565b5b02179055504281600601819055507f61b9399f2f0f32ca39ce8d7be32caed5ec22fe07a6daba3a467ed479ec6065828260405161079f9190610ec8565b60405180910390a15050565b600081815481106107bb57600080fd5b90600052602060002090600702016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050160149054906101000a900460ff16908060060154905088565b6000838573ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016108cc9190610ffb565b602060405180830381865afa1580156108e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090d919061102b565b101561094e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094590611241565b60405180910390fd5b60006040518061010001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018573ffffffffffffffffffffffffffffffffffffffff168152602001848152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600060028111156109ed576109ec610d40565b5b8152602001428152509050600081908060018154018082558091505060019003906000526020600020906007020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160050160146101000a81548160ff02191690836002811115610b7f57610b7e610d40565b5b021790555060e08201518160060155505060006001600080549050610ba49190611290565b90508673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330886040518363ffffffff1660e01b8152600401610be19291906110c4565b6020604051808303816000875af1158015610c00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c249190611125565b503373ffffffffffffffffffffffffffffffffffffffff167f2779fe812f2a74097a118c221e18caafb74b1ead73b6821d50af64d6da968f7f8289898989604051610c739594939291906112c4565b60405180910390a28092505050949350505050565b600080fd5b6000819050919050565b610ca081610c8d565b8114610cab57600080fd5b50565b600081359050610cbd81610c97565b92915050565b600060208284031215610cd957610cd8610c88565b5b6000610ce784828501610cae565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d1b82610cf0565b9050919050565b610d2b81610d10565b82525050565b610d3a81610c8d565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110610d8057610d7f610d40565b5b50565b6000819050610d9182610d6f565b919050565b6000610da182610d83565b9050919050565b610db181610d96565b82525050565b600061010082019050610dcd600083018b610d22565b610dda602083018a610d22565b610de76040830189610d31565b610df46060830188610d22565b610e016080830187610d31565b610e0e60a0830186610d22565b610e1b60c0830185610da8565b610e2860e0830184610d31565b9998505050505050505050565b610e3e81610d10565b8114610e4957600080fd5b50565b600081359050610e5b81610e35565b92915050565b60008060008060808587031215610e7b57610e7a610c88565b5b6000610e8987828801610e4c565b9450506020610e9a87828801610cae565b9350506040610eab87828801610e4c565b9250506060610ebc87828801610cae565b91505092959194509250565b6000602082019050610edd6000830184610d31565b92915050565b600082825260208201905092915050565b7f496e76616c696420696e64657800000000000000000000000000000000000000600082015250565b6000610f2a600d83610ee3565b9150610f3582610ef4565b602082019050919050565b60006020820190508181036000830152610f5981610f1d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e6f7420616e20616374697665206f7264657200000000000000000000000000600082015250565b6000610fc5601383610ee3565b9150610fd082610f8f565b602082019050919050565b60006020820190508181036000830152610ff481610fb8565b9050919050565b60006020820190506110106000830184610d22565b92915050565b60008151905061102581610c97565b92915050565b60006020828403121561104157611040610c88565b5b600061104f84828501611016565b91505092915050565b7f496e73756666696369656e742061736b20746f6b656e00000000000000000000600082015250565b600061108e601683610ee3565b915061109982611058565b602082019050919050565b600060208201905081810360008301526110bd81611081565b9050919050565b60006040820190506110d96000830185610d22565b6110e66020830184610d31565b9392505050565b60008115159050919050565b611102816110ed565b811461110d57600080fd5b50565b60008151905061111f816110f9565b92915050565b60006020828403121561113b5761113a610c88565b5b600061114984828501611110565b91505092915050565b60006060820190506111676000830186610d22565b6111746020830185610d22565b6111816040830184610d31565b949350505050565b7f4e6f74206f72646572206f776e65720000000000000000000000000000000000600082015250565b60006111bf600f83610ee3565b91506111ca82611189565b602082019050919050565b600060208201905081810360008301526111ee816111b2565b9050919050565b7f496e73756666696369656e742062696420746f6b656e00000000000000000000600082015250565b600061122b601683610ee3565b9150611236826111f5565b602082019050919050565b6000602082019050818103600083015261125a8161121e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061129b82610c8d565b91506112a683610c8d565b9250828210156112b9576112b8611261565b5b828203905092915050565b600060a0820190506112d96000830188610d31565b6112e66020830187610d22565b6112f36040830186610d31565b6113006060830185610d22565b61130d6080830184610d31565b969550505050505056fea264697066735822122004331af7d958d4e6955e6cbd4e37fa57ced1465411457db60286c013fb7d237464736f6c634300080c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80633b5d1a2414610051578063514fcac71461006d578063a85c38ef14610089578063afe18413146100c0575b600080fd5b61006b60048036038101906100669190610cc3565b6100f0565b005b61008760048036038101906100829190610cc3565b6105c4565b005b6100a3600480360381019061009e9190610cc3565b6107ab565b6040516100b7989796959493929190610db7565b60405180910390f35b6100da60048036038101906100d59190610e61565b610890565b6040516100e79190610ec8565b60405180910390f35b6000805490508110610137576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012e90610f40565b60405180910390fd5b600080828154811061014c5761014b610f60565b5b90600052602060002090600702019050600060028111156101705761016f610d40565b5b8160050160149054906101000a900460ff16600281111561019457610193610d40565b5b146101d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101cb90610fdb565b60405180910390fd5b80600401548160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016102369190610ffb565b602060405180830381865afa158015610253573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610277919061102b565b10156102b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102af906110a4565b60405180910390fd5b8060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b33083600401546040518363ffffffff1660e01b815260040161031b9291906110c4565b6020604051808303816000875af115801561033a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035e9190611125565b508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163384600201546040518463ffffffff1660e01b81526004016103e893929190611152565b6020604051808303816000875af1158015610407573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042b9190611125565b508060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd338360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600401546040518463ffffffff1660e01b81526004016104b593929190611152565b6020604051808303816000875af11580156104d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f89190611125565b5060018160050160146101000a81548160ff0219169083600281111561052157610520610d40565b5b0217905550338160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055504281600601819055503373ffffffffffffffffffffffffffffffffffffffff167f67952de212ba12d8a24b4d320b2adc6648cd78dfd1cb43bf37a5f0fdd461d8ef836040516105b89190610ec8565b60405180910390a25050565b600080549050811061060b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060290610f40565b60405180910390fd5b60008082815481106106205761061f610f60565b5b906000526020600020906007020190506000600281111561064457610643610d40565b5b8160050160149054906101000a900460ff16600281111561066857610667610d40565b5b146106a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069f90610fdb565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461073a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610731906111d5565b60405180910390fd5b60028160050160146101000a81548160ff0219169083600281111561076257610761610d40565b5b02179055504281600601819055507f61b9399f2f0f32ca39ce8d7be32caed5ec22fe07a6daba3a467ed479ec6065828260405161079f9190610ec8565b60405180910390a15050565b600081815481106107bb57600080fd5b90600052602060002090600702016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050160149054906101000a900460ff16908060060154905088565b6000838573ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016108cc9190610ffb565b602060405180830381865afa1580156108e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090d919061102b565b101561094e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094590611241565b60405180910390fd5b60006040518061010001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018573ffffffffffffffffffffffffffffffffffffffff168152602001848152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600060028111156109ed576109ec610d40565b5b8152602001428152509050600081908060018154018082558091505060019003906000526020600020906007020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160050160146101000a81548160ff02191690836002811115610b7f57610b7e610d40565b5b021790555060e08201518160060155505060006001600080549050610ba49190611290565b90508673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330886040518363ffffffff1660e01b8152600401610be19291906110c4565b6020604051808303816000875af1158015610c00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c249190611125565b503373ffffffffffffffffffffffffffffffffffffffff167f2779fe812f2a74097a118c221e18caafb74b1ead73b6821d50af64d6da968f7f8289898989604051610c739594939291906112c4565b60405180910390a28092505050949350505050565b600080fd5b6000819050919050565b610ca081610c8d565b8114610cab57600080fd5b50565b600081359050610cbd81610c97565b92915050565b600060208284031215610cd957610cd8610c88565b5b6000610ce784828501610cae565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d1b82610cf0565b9050919050565b610d2b81610d10565b82525050565b610d3a81610c8d565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110610d8057610d7f610d40565b5b50565b6000819050610d9182610d6f565b919050565b6000610da182610d83565b9050919050565b610db181610d96565b82525050565b600061010082019050610dcd600083018b610d22565b610dda602083018a610d22565b610de76040830189610d31565b610df46060830188610d22565b610e016080830187610d31565b610e0e60a0830186610d22565b610e1b60c0830185610da8565b610e2860e0830184610d31565b9998505050505050505050565b610e3e81610d10565b8114610e4957600080fd5b50565b600081359050610e5b81610e35565b92915050565b60008060008060808587031215610e7b57610e7a610c88565b5b6000610e8987828801610e4c565b9450506020610e9a87828801610cae565b9350506040610eab87828801610e4c565b9250506060610ebc87828801610cae565b91505092959194509250565b6000602082019050610edd6000830184610d31565b92915050565b600082825260208201905092915050565b7f496e76616c696420696e64657800000000000000000000000000000000000000600082015250565b6000610f2a600d83610ee3565b9150610f3582610ef4565b602082019050919050565b60006020820190508181036000830152610f5981610f1d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e6f7420616e20616374697665206f7264657200000000000000000000000000600082015250565b6000610fc5601383610ee3565b9150610fd082610f8f565b602082019050919050565b60006020820190508181036000830152610ff481610fb8565b9050919050565b60006020820190506110106000830184610d22565b92915050565b60008151905061102581610c97565b92915050565b60006020828403121561104157611040610c88565b5b600061104f84828501611016565b91505092915050565b7f496e73756666696369656e742061736b20746f6b656e00000000000000000000600082015250565b600061108e601683610ee3565b915061109982611058565b602082019050919050565b600060208201905081810360008301526110bd81611081565b9050919050565b60006040820190506110d96000830185610d22565b6110e66020830184610d31565b9392505050565b60008115159050919050565b611102816110ed565b811461110d57600080fd5b50565b60008151905061111f816110f9565b92915050565b60006020828403121561113b5761113a610c88565b5b600061114984828501611110565b91505092915050565b60006060820190506111676000830186610d22565b6111746020830185610d22565b6111816040830184610d31565b949350505050565b7f4e6f74206f72646572206f776e65720000000000000000000000000000000000600082015250565b60006111bf600f83610ee3565b91506111ca82611189565b602082019050919050565b600060208201905081810360008301526111ee816111b2565b9050919050565b7f496e73756666696369656e742062696420746f6b656e00000000000000000000600082015250565b600061122b601683610ee3565b9150611236826111f5565b602082019050919050565b6000602082019050818103600083015261125a8161121e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061129b82610c8d565b91506112a683610c8d565b9250828210156112b9576112b8611261565b5b828203905092915050565b600060a0820190506112d96000830188610d31565b6112e66020830187610d22565b6112f36040830186610d31565b6113006060830185610d22565b61130d6080830184610d31565b969550505050505056fea264697066735822122004331af7d958d4e6955e6cbd4e37fa57ced1465411457db60286c013fb7d237464736f6c634300080c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 106,
        "contract": "contracts/OrderBook.sol:OrderBook",
        "label": "orders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_struct(Order)102_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Order)102_storage)dyn_storage": {
        "base": "t_struct(Order)102_storage",
        "encoding": "dynamic_array",
        "label": "struct OrderBook.Order[]",
        "numberOfBytes": "32"
      },
      "t_enum(Status)84": {
        "encoding": "inplace",
        "label": "enum OrderBook.Status",
        "numberOfBytes": "1"
      },
      "t_struct(Order)102_storage": {
        "encoding": "inplace",
        "label": "struct OrderBook.Order",
        "members": [
          {
            "astId": 86,
            "contract": "contracts/OrderBook.sol:OrderBook",
            "label": "maker",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 88,
            "contract": "contracts/OrderBook.sol:OrderBook",
            "label": "tokenBid",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 90,
            "contract": "contracts/OrderBook.sol:OrderBook",
            "label": "bidAmt",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 92,
            "contract": "contracts/OrderBook.sol:OrderBook",
            "label": "tokenAsk",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 94,
            "contract": "contracts/OrderBook.sol:OrderBook",
            "label": "askAmt",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 96,
            "contract": "contracts/OrderBook.sol:OrderBook",
            "label": "taker",
            "offset": 0,
            "slot": "5",
            "type": "t_address"
          },
          {
            "astId": 99,
            "contract": "contracts/OrderBook.sol:OrderBook",
            "label": "status",
            "offset": 20,
            "slot": "5",
            "type": "t_enum(Status)84"
          },
          {
            "astId": 101,
            "contract": "contracts/OrderBook.sol:OrderBook",
            "label": "timestamp",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}